<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- MySQL datasource : MySQL과 연결을 담당한다. -->
	<!-- datasource는 JDBC 커넥션을 처리하는 기능을 담당하고 있다.
		 그래서 DB와 연동하는 작업에는 반드시 필요하다. -->
	<bean  id="datasource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<!-- <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"></property> 
			<property name="url" value="jdbc:mysql://127.0.0.1:3306/mealkitshopdb?useSSL=false&amp;serverTimezone=UTC"></property>
		-->
		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>
		<property name="url" value="jdbc:log4jdbc:mysql://127.0.0.1:3306/roomjava?useSSL=false&amp;serverTimezone=UTC"></property>
		<property name="username" value="roommaster"></property>
		<property name="password" value=""></property>
	</bean>
	
	<!-- sqlSessionFactory 객체 주입 -->
	<!-- sqlSessionFactory : DB와의 연결과 SQL의 실행에 대한 모든 것을 가진 객체. -->
	<!-- MyBatis 설정 기능을 활용할 수 있도록 설정파일을 읽어오는 부분과
	   	 SQL문을 작성해 둘 Mapper.xml 파일을 읽어오는 부분 -->
	<bean id="sqlSessionFactory"  class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="datasource"/>
		
		<!-- mybatis-config.xml이 스프링이 시작될 때 깥이 실행되도록 설정한다. -->
		<property name="configLocation" value="classpath:/mybatis-config.xml"></property>
		
		<!-- XML Mapper 파일을 인식하도록 설정한다. -->
		<property name="mapperLocations" value="classpath:mappers/**/*Mapper.xml"></property>
	</bean>
	
	<!-- SqlSession 객체 주입 -->
	<!-- 기본적인 트랜잭션 관리나 쓰레드 처리의 안정성 등을 보장, DB의 연결과 종료를 관리하는 부분 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
	</bean>
	
	<!-- Bean 등록을 하기 위해 스캔한다. -->
	<context:component-scan base-package="com.room" />

	<!-- AOP 설정 -->	
	<context:annotation-config></context:annotation-config>
	
	<!-- component-scan을 이용하여 해당 패키지를 스캔하게 만든다. -->
	<!-- 이 과정에서 LogAdvice가 스프링의 Bean객체로 등록된다. -->
	<context:component-scan base-package="com.room"></context:component-scan>
	
	<!-- <aop:aspectj-autoproxy></aop:aspectj-autoproxy>를 이용해서 LogAdvice에서 설정한 @Before가 동작하게 된다. -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
	
	
</beans>
